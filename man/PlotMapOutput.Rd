% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_PlotMapOutput.R
\name{PlotMapOutput}
\alias{PlotMapOutput}
\title{Plot function for HYPE map results.}
\usage{
PlotMapOutput(x, map, map.subid.column = 1, var.name = "", map.adj = 0,
  plot.legend = T, legend.pos = "right", legend.title = NULL,
  legend.outer = F, legend.inset = c(0, 0), col.ramp.fun = "auto",
  col.breaks = NULL, plot.scale = T, plot.arrow = T, par.cex = 1,
  par.mar = rep(0, 4) + 0.1, add = FALSE, restore.par = FALSE)
}
\arguments{
\item{x}{HYPE model results, typically 'map output' results. Data frame object with two columns, first column containing SUBIDs and 
second column containing model results to plot. See details.}

\item{map}{A \code{SpatialPolygonsDataFrame} object. Typically an imported sub-basin shape file, shape file import 
requires additional packages, e.g. \code{rgdal}.}

\item{map.subid.column}{Integer, column index in the \code{map} 'data' \code{\link{slot}} holding SUBIDs (sub-catchment IDs).}

\item{var.name}{Character string. HYPE variable name to be plotted. Mandatory for automatic color ramp selection of pre-defined
HYPE variables (\code{col.ramp.fun = "auto"}). Not case-sensitive. See details.}

\item{map.adj}{Numeric, map adjustion in direction where it is smaller than the plot window. A value of \code{0} means left-justified 
or bottom-justified, \code{0.5} (the default) means centered, and \code{1} means right-justified or top-justified.}

\item{plot.legend}{Logical, plot a legend along with the map. Uses function \code{\link{legend}}.}

\item{legend.pos}{Legend, scale, and north arrow position, keyword string. One of \code{"left"}, \code{"topleft"}, \code{"topright"}, 
\code{"right"}, \code{"bottomright"}, \code{"bottomleft"}.}

\item{legend.title}{Character string or mathematical expression. An optional title for the legend. If none is provided here, \code{var.name}
is used as legend title string. For select HYPE variables, pretty legend titles are in-built.}

\item{legend.outer}{Logical. If \code{TRUE}, outer break point values will be plotted in legend.}

\item{legend.inset}{Numeric, inset distance(s) from the margins as a fraction of the plot region for legend, scale and north arrow. 
See \code{\link{legend}} and details below.}

\item{col.ramp.fun}{Color ramp palette to use for the map. One of the following: \itemize{
\item \code{"auto"} to allow for automatic selection from pre-defined color ramp palettes and break points based on argument \code{var.name}, 
see details
\item One of the pre-defined palette functions for HYPE output variables or user-calculated differences between model results: 
\code{"ColNitr"} for nitrogen, \code{"ColPhos"} for phosphorus, \code{"ColPrec"} for precipitation, \code{"ColTemp"} for 
temperatures, \code{"ColQ"} for runoff, \code{"ColDiffTemp"} for temperature differences,  \code{"ColDiffGeneric"} for generic
differences, see details
\item A color ramp palette function, e.g. as returned from a call to \code{\link{colorRampPalette}}
}}

\item{col.breaks}{A numeric vector, specifying break points for discretisation of model result values into classes. Class boundaries will be
interpreted as right-closed, i.e upper boundaries included in class. Lowest class boundary included in lowest class as well.
Meaningful results require the lowest and uppermost breaks to bracket all model result values, otherwise there will be 
unclassified white spots on the map plot. Not mandatory, can optionally 
be combined with one of the pre-defined palettes, including \code{"auto"} selection. Per default, a generic
classification will be applied (see details).}

\item{plot.scale}{Logical, plot a scale bar below legend (i.e. position defined by legend position). NOTE: works only with 
projected maps based on meter units, not geographical projections}

\item{plot.arrow}{Logical, plot a North arrow below legend (i.e. position defined by legend position).}

\item{par.cex}{Numeric, character expansion factor. See description of \code{cex} in \code{\link{par}}.}

\item{par.mar}{Plot margins as in \code{\link{par}} argument \code{mar}. Defaults to a nearly margin-less plot. 
In standard use cases of this function, plot margins do not need to be changed.}

\item{add}{Logical, default \code{FALSE}. If \code{TRUE}, add to existing plot. In that case \code{map.adj} has no effect.}

\item{restore.par}{Logical, if \code{TRUE}, par settings will be restored to original state on function exit.}
}
\value{
\code{PlotMapOutput} returns a plot to the currently active plot device, and invisibly an object of class \code{\link{SpatialPolygonsDataFrame}} 
as provided in argument \code{map}, with plotted values and color codes added as columns in the data slot.
}
\description{
Draw HYPE map results, with pretty scale discretisations and color ramp defaults for select HYPE variables.
}
\details{
\code{PlotMapOutput} plots HYPE results from 'map[variable name].txt' files, typically imported using \code{\link{ReadMapOutput}}. 
\code{x} arguments \strong{must} contain the variable of interest in the second column. For multicolumn map results, i.e. with 
several time periods, pass index selections to \code{x}, e.g. \code{mymapresult[, c(1, 3)]}. 

Mapped variables are visualised using color-coded data intervals. \code{PlotMapOutput} can use one of several internal color ramp functions 
suitable for some common HYPE result variables as listed under argument \code{col.ramp.fun}. These are called by keyword. Alternatively,
any color ramp function can be provided. The internal color ramps are mostly single color ramps with less saturated colors for smaller values
and more saturated values for higher values, suitable for e.g. concentration or volume ranges. \code{ColTemp} is an exception to this rule, 
with blue-to-turquoise colors and yellow-to-red 
colors to represent temperature ranges below and above zero. Two further ramps provided are suitable to represent calculated differences, 
e.g. between two model runs, a generic ramp with reds on the low end and blues on the high end, and a temperature-specific one in reversed
order. 

Break points between color classes of in-built or user-provided color ramp palettes can optionally be provided in argument 
\code{col.breaks}. This is particularly useful when specific pretty class boundaries are needed, e.g. for publication figures. Per default, 
break points for internal single color ramps and user-provided ramps are calculated based on 10\% percentiles of HYPE results given in 
\code{x}. Default break points for internal color ramp \code{"ColDiffGeneric"} are based on an equal distance classification of log-scaled 
\code{x} ranges, centered around zero. For internal color ramp \code{"ColDiffTemp"}, they are breaks in an interval from -7.5 to 7.5 K.

For select common HYPE variables, given in argument \code{var.name}, an automatic color ramp selection including pretty breaks and legend titles 
is built into 
\code{PlotMapOutput}. These are 'CCTN', 'CCTP', 'COUT', and 'TEMP'. Automatic selection is activated by chosing keyword \code{"auto"}
in \code{col.ramp.fun}. All other HYPE variables will be plotted using a generic color ramp palette and generic break points.

\code{PlotMapOutput} per default works with a margin-less figure and positions map and legend items close to the plot boundaries. 
In order to move map and legend closer to each other, change the plot device width.

Legends are positioned by keyword through argument \code{legend.pos}, defaulting to the right side of the map. \code{legend.pos} and 
\code{map.adj} should be chosen so that legend and map do not overlap. Additionally, the legend position can be fine-tuned using 
argument \code{legend.inset}. This is particularly useful for legend titles with more than one line. For details on inset 
specification see \code{inset} in \code{\link{legend}}.
}
\examples{
\dontrun{require(rgdal)
x11(width = 5, height = 8)
PlotMapOutput(x = mymapresult, map = readOGR(dsn = "../gisdata", layer = "myHYPEsubids"), map.subid.column = 2, var.name = "CCTN")}

}
\seealso{
\code{\link{ReadMapOutput}} for HYPE result import; \code{\link{PlotMapPoints}} for a similar plot function
}

